name: Release binaries

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install
        run: npm install
      - name: Install Gapi CLI
        run: npm i -g @gapi/cli @zeit/ncc@0.22.1 pkg@4.4.7
      - name: Build
        run: npm run build-binary
      - name: Build JS
        run: npm run build
      - name: Read package.json Version
        uses: tyankatsu0105/read-package-version-actions@v1
        id: version
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Firelink Linux to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/firelink-linux
          asset_name: firelink-linux
          asset_content_type: application/octet-stream

      - name: Upload Firelink Windows to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/firelink-win.exe
          asset_name: firelink-win.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload Firelink MacOS to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/firelink-macos
          asset_name: firelink-macos
          asset_content_type: application/octet-stream

      - name: Upload JS to Releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.js
          asset_name: main.js
          asset_content_type: text/javascript
